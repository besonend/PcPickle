{"version":3,"sources":["images/pickle.png","store/auth.js","pages/SignupPage.js","pages/LoginPage.js","components/utils/Routes.js","store/parts.js","pages/Home.js","pages/CreatePart.js","components/NavBar.js","components/PartsBar.js","pages/Parts.js","pages/Part.js","pages/Build.js","App.js","store/configureStore.js","index.js"],"names":["module","exports","setUser","user","type","registerErrors","errors","login","username","password","dispatch","a","csrfToken","Cookies","get","fetch","method","headers","body","JSON","stringify","res","json","data","ok","signup","email","useStyles","makeStyles","SignupPage","classes","useDispatch","useState","setUsername","setPassword","confirmPassword","setConfirmPassword","setEmail","userToCreate","setUserToCreate","setErrors","authErrors","useSelector","state","auth","useEffect","validateUser","Object","values","id","Container","fixed","maxWidth","root","container","className","Divider","style","width","margin","color","display","flexDirection","alignContent","map","err","i","marginTop","marginBottom","key","action","onSubmit","e","preventDefault","TextField","InputLabelProps","size","placeholder","name","value","onChange","target","Button","to","theme","LoginPage","handleSubmit","document","location","reload","demoLogin","onClick","AuthRoute","Component","component","path","currentUserId","exact","render","props","makePart","manufacturer","pictureUrl","price","clockSpeed","liquid","SSD","gbSize","VRAM","watts","part","Home","parts","partsReducer","console","log","CreatePart","setName","setManufacturer","setPictureUrl","setPrice","setSize","setClockSpeed","window","pathname","split","createHTML","FormControl","InputLabel","Select","MenuItem","Grid","appbar","backgroundColor","space","justifyContent","NavBar","loggedin","navarino","createBuild","href","AppBar","position","Toolbar","src","pickle","alt","height","bar","alignItems","link","textDecoration","PartsBar","spacing","item","Parts","Part","Build","App","storeEnhancer","loading","setLoading","loadUser","currentUser","CssBaseline","rootReducer","combineReducers","newState","assign","currentErrors","errorIds","keys","forEach","errorId","freeze","applyMiddleware","thunk","initialState","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1b67065.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pickle.ea24e83d.png\";","import Cookies from 'js-cookie'\n\nconst SET_USER = 'auth/SET_USER';\nconst REMOVE_USER = 'auth/REMOVE_USER';\nconst SIGNUP = 'auth/SIGNUP';\nconst REGISTER_ERRORS = 'auth/REGISTER_ERRORS'\nconst CLEAR_ERRORS = 'auth/CLEAR_ERRORS'\n\nexport const setUser = (user) => {\n    return {\n        type: SET_USER,\n        user\n    };\n};\n\nexport const removeUser = () => {\n    return {\n        type: REMOVE_USER\n    }\n}\n\nexport const newUser = (user) => ({\n    type: SIGNUP,\n    user\n})\n\nexport const registerErrors = (errors) => {\n    return ({\n        type: REGISTER_ERRORS,\n        errors\n    })\n}\n\nexport const clearErrors = () => {\n    return ({\n        type: CLEAR_ERRORS,\n    })\n}\n\nexport const login = (username, password) => async dispatch => {\n    if (!username || !password) {\n        return\n    }\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n    const res = await fetch('/api/session/', {\n        method: \"put\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: JSON.stringify({ username, password })\n    });\n    const data = await res.json();\n    if (res.ok && !data[\"errors\"]) {\n        dispatch(setUser(data));\n        res.data = data\n    } else {\n        res.errors = data[\"errors\"]\n        dispatch(registerErrors(data[\"errors\"]))\n    }\n    return res;\n};\n\nexport const signup = (username, email, password) => {\n    return async (dispatch) => {\n        if (!username || !password || !email) {\n            return;\n        }\n        const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n        const res = await fetch('/api/session/', {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n            },\n            body: JSON.stringify({ username, email, password })\n        });\n        const data = await res.json();\n        if (res.ok && !data[\"errors\"]) {\n            dispatch(newUser(data));\n            res.data = data;\n        } else {\n            res.errors = data[\"errors\"]\n            dispatch(registerErrors(data[\"errors\"]))\n        }\n        return res;\n    };\n}\n\n\n\nexport const logout = () => async dispatch => {\n    const res = await fetch('/api/session/logout', {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    if (res.ok) {\n        dispatch(removeUser());\n    }\n\n    return res;\n}\n\nexport default function authReducer(state = { user: { id: null } }, action) {\n    const newState = Object.assign({}, state)\n    const currentErrors = Object.assign({}, state.errors)\n    switch (action.type) {\n        case SET_USER:\n            newState.user = action.user\n            return newState\n        case SIGNUP:\n            return action.user\n        case REGISTER_ERRORS:\n            newState.errors = currentErrors\n            const errorIds = Object.keys(action.errors)\n            errorIds.forEach(errorId => {\n                newState.errors[errorId] = action.errors[errorId]\n            })\n            return newState;\n        case REMOVE_USER:\n            return { user: { id: null } };\n        case CLEAR_ERRORS:\n            newState.errors = {}\n            return newState\n        default:\n            return state;\n\n    }\n}\n","import React, { useEffect } from 'react';\nimport { useState } from 'react'\nimport { signup, registerErrors, clearErrors } from '../store/auth'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider';\n\n\nconst useStyles = makeStyles({\n\n})\n\n\nfunction SignupPage() {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [userToCreate, setUserToCreate] = useState({})\n  const [errors, setErrors] = useState([])\n  const authErrors = useSelector(state => state.auth.errors)\n\n  useEffect(() => {\n    dispatch(clearErrors())\n  }, [dispatch])\n\n  useEffect(() => {\n    const validateUser = async () => {\n      const username = userToCreate.username\n      const email = userToCreate.email\n      const password = userToCreate.password\n      await dispatch(signup(username, email, password))\n    }\n    if (userToCreate !== {}) {\n      validateUser()\n    }\n  }, [userToCreate, dispatch])\n\n  useEffect(() => {\n    if (authErrors) setErrors(Object.values(authErrors))\n  }, [authErrors])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!username) {\n      dispatch(registerErrors({ \"8\": \"please enter a username\" }))\n    }\n    if (!email) {\n      dispatch(registerErrors({ \"10\": \"please enter an email address\" }))\n    }\n    if (!password || !confirmPassword) {\n      dispatch(registerErrors({ \"11\": \"please enter a password and confirm it\" }))\n    }\n    if (!(password === confirmPassword)) {\n      dispatch(registerErrors({ \"9\": \"password fields do not match\" }))\n    }\n    if ((password === confirmPassword) && username && email) {\n      setUserToCreate({ username, email, password })\n    }\n  }\n\n  const handleUsernameInput = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const handleEmailInput = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const handlePasswordInput = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const handleConfirmPasswordInput = (e) => {\n    setConfirmPassword(e.target.value)\n  }\n\n  return (\n    <>\n      <div id=\"main-content-sign-up\">\n        <Container fixed maxWidth=\"sm\" classes={{ root: classes.container }}>\n          <h1 className=\"login-and-signup-header\">Sign up for your account</h1>\n          <Divider style={{ width: \"100%\", margin: \"10px\" }} />\n          <div style={{ color: \"red\", display: \"flex\", flexDirection: \"column\", alignContent: \"center\" }}>\n            {errors ? errors.map((err, i) => {\n              return (<p style={{ marginTop: \"3px\", marginBottom: \"3px\" }} key={i}>{errors[i]}</p>)\n            }) : \"\"}\n          </div>\n          <form className='signup-form' method=\"POST\" action=\"/api/session\" onSubmit={handleSubmit}>\n            <TextField InputLabelProps={{ style: { color: \"grey\" } }} type=\"text\" size=\"medium\" placeholder=\"username\" name=\"username\" value={username} onChange={handleUsernameInput} />\n            <TextField InputLabelProps={{ style: { color: \"grey\" } }} type=\"text\" size=\"medium\" placeholder=\"email\" name=\"email\" value={email} onChange={handleEmailInput} />\n            <TextField InputLabelProps={{ style: { color: \"grey\" } }} type=\"password\" size=\"medium\" placeholder=\"password\" name=\"password\" value={password} onChange={handlePasswordInput} />\n            <TextField InputLabelProps={{ style: { color: \"grey\" } }} style={{ color: \"red\" }} type=\"password\" size=\"medium\" placeholder=\"confirm password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordInput} />\n            <Button size=\"small\" classes={{ root: classes.Button }} type=\"submit\">Sign Up and Log In</Button>\n          </form>\n          <Divider style={{ width: \"100%\", margin: \"24px\" }} />\n          <NavLink id='login-navlink' to=\"/login\"><p id=\"signUpText\">Already have an account?  Log In</p></NavLink>\n        </Container>\n      </div>\n    </>\n  )\n}\n\nexport default SignupPage;\n","import React, { useEffect } from 'react';\nimport { useState } from 'react'\nimport { login, registerErrors, clearErrors } from '../store/auth'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n}))\n\n\nfunction LoginPage() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [errors, setErrors] = useState(\"\")\n    const authErrors = useSelector(state => state.auth.errors)\n\n    useEffect(() => {\n        dispatch(clearErrors())\n    }, [dispatch])\n\n    useEffect(() => {\n        if (authErrors) setErrors(Object.values(authErrors))\n    }, [authErrors])\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        if (!username || !password) {\n            await dispatch(registerErrors({ \"1\": \"Must enter username and password\" }));\n        } else {\n            const res = await dispatch(login(username, password));\n\n            if (res.errors) {\n                await dispatch(registerErrors({ \"1\": \"Incorrect username or password!\" }));\n            }\n            else {\n                document.location.reload();\n            }\n        }\n    }\n\n    const demoLogin = async (e) => {\n        e.preventDefault();\n        await dispatch(login('DemoUser', 'password'));\n        document.location.reload();\n    }\n\n    return (\n        <>\n            <div  className={classes.root} >\n                <h1>Welcome to Pickle</h1>\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <button onClick={demoLogin}>Login As a Demo User</button>\n                </div>\n                <div style={{ color: \"red\", display: \"flex\", flexDirection: \"column\" }}>\n                    {errors ? errors.map((err, i) => {\n                        return (<p style={{ marginTop: \"3px\", marginBottom: \"3px\" }} key={i}>{errors[i]}</p>)\n                    }) : \"\"}\n                </div>\n                <form className='login-form' method=\"PUT\" action=\"/api/session\" onSubmit={handleSubmit}>\n                    <div>\n                        <TextField type=\"text\" placeholder=\"username\" name=\"username\" value={username} onChange={e => setUsername(e.target.value)} />\n                        <TextField type=\"password\" placeholder=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n                    </div>\n                    <button type=\"submit\">Log in</button>\n                </form>\n                <NavLink to=\"/signup\"><p>Don't have an account?  Sign Up</p></NavLink>\n            </div>\n        </>\n\n    )\n\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const ProtectedRoute = ({ component: Component, path, currentUserId, exact }) => {\n    return (\n        <Route path={path} exact={exact} render={(props) => (\n            currentUserId ? <Component {...props} /> : <Redirect to='/' />\n        )} />\n    )\n}\n\nexport const AuthRoute = ({ component: Component, path, currentUserId, exact }) => {\n\n    return (\n        <Route\n            path={path}\n            exact={exact}\n            render={(props) =>\n                currentUserId ? <Redirect to={`/`} /> : <Component {...props} />\n            }\n        />\n    );\n};\n","import Cookies from 'js-cookie'\n\nconst GET_PARTS = 'auth/GET_PARTS';\nconst GET_PART = 'auth/GET_PART';\nconst DELETE_PART = 'auth/DELETE_PART';\nconst CREATE_PART = 'auth/CREATE_PART';\n\nconst getParts = (parts) => {\n    return {\n        type: GET_PARTS,\n        parts,\n    };\n};\n\n\nconst getPart = (part) => {\n    return {\n        type: GET_PART,\n        part,\n    };\n};\n\nconst createPart = (part) => ({\n    type: CREATE_PART,\n    part\n})\n\n\nexport const fetchParts = () => {\n    return async (dispatch) => {\n        const res = await fetch(`/api/parts`);\n        const data = await res.json();\n        dispatch(getParts(data));\n        return res;\n    };\n};\n\nexport const fetchPart = (type, id) => {\n    return async (dispatch) => {\n        if (!id) {\n            return null;\n        }\n        const res = await fetch(`/api/parts/${type}/${id}`); // Using proxy in our package.json,\n        const data = await res.json();\n        dispatch(getPart(data.part));\n        return res;\n    };\n};\n\nexport const makePart = (type, name, manufacturer, pictureUrl, price, size, clockSpeed, liquid, SSD, gbSize, VRAM, watts) => {\n    return async (dispatch) => {\n        const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n        const res = await fetch(`/api/parts/${type}`, {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n            },\n            body: JSON.stringify({ type, name, manufacturer, pictureUrl, price, size, clockSpeed, liquid, SSD, gbSize, VRAM, watts})\n        });\n        const data = await res.json();\n        if (res.ok) {\n            dispatch(createPart(data));\n            res.data = data;\n        }\n        return res;\n    };\n}\n\n\nexport default function partsReducer(state = {}, action) {\n    Object.freeze(state);\n    switch (action.type) {\n        case GET_PARTS:\n            return action.parts;\n        case GET_PART:\n            return action.part;\n        case CREATE_PART:\n            return action.part;\n        default:\n            return state;\n    }\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { fetchParts } from '../store/parts';\n\n\n\nfunction Home() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchParts())\n    }, [dispatch])\n\n    const parts = useSelector(state=>state.partsReducer)\n    console.log(parts)\n\n    return (\n        <>\n            <h1>This is the Home Page</h1>\n            <h1>Cases</h1>\n            <div>\n                <NavLink to=\"/create/case\">Add a Case</NavLink>\n            </div>\n            <h1>Mother Boards</h1>\n            <div>\n                <NavLink to=\"/create/motherboard\">Add a MotherBoard</NavLink>\n            </div>\n            <h1>CPUs</h1>\n            <div>\n                <NavLink to=\"/create/cpu\">Add a CPU</NavLink>\n            </div>\n            <h1>GPUs</h1>\n            <div>\n                <NavLink to=\"/create/gpu\">Add a GPU</NavLink>\n            </div>\n            <h1>Power Supplies</h1>\n            <div>\n                <NavLink to=\"/create/powerSupply\">Add a Power Supply</NavLink>\n            </div>\n            <h1>Hard Drives</h1>\n            <div>\n                <NavLink to=\"/create/hardDrive\">Add a Hard Drive</NavLink>\n            </div>\n            <h1>Network Cards</h1>\n            <div>\n                <NavLink to=\"/create/networkCard\">Add a Network Card</NavLink>\n            </div>\n            <h1>Coolers</h1>\n            <div>\n                <NavLink to=\"/create/cooler\">Add a Cooler</NavLink>\n            </div>\n            <h1>RAM</h1>\n            <div>\n                <NavLink to=\"/create/ram\">Add a RAM</NavLink>\n            </div>\n        </>\n    );\n}\nexport default Home;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport { FormControl, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { makePart } from '../store/parts';\n\n\nfunction CreatePart() {\n    const dispatch = useDispatch();\n    const [name, setName] = useState(\"\");\n    const [manufacturer, setManufacturer] = useState(\"\");\n    const [pictureUrl, setPictureUrl] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [size, setSize] = useState(\"\");\n    const [clockSpeed, setClockSpeed] = useState(\"\");\n    const [liquid, setLiquid] = useState(\"\");\n    const [SSD, setSSD] = useState(\"\");\n    const [gbSize, setgbSize] = useState(\"\");\n    const [VRAM, setVRAM] = useState(\"\");\n    const [watts, setWatts] = useState(\"\");\n    const type = window.location.pathname.split('/')[2];\n    let createHTML = '';\n\n    if (type === 'case') {\n        createHTML = (\n            <>\n                <FormControl>\n                    <InputLabel>Size</InputLabel>\n                    <Select placeholder=\"size\" name=\"size\" value={size} onChange={e => setSize(e.target.value)}>\n                        <MenuItem value={1}>Small</MenuItem>\n                        <MenuItem value={2}>Medium</MenuItem>\n                        <MenuItem value={3}>Large</MenuItem>\n                    </Select>\n                </FormControl>\n            </>\n        )\n    }\n    else if (type === 'motherboard') {\n        createHTML = (\n            <>\n                <FormControl>\n                    <InputLabel>Size</InputLabel>\n                    <Select placeholder=\"size\" name=\"size\" value={size} onChange={e => setSize(e.target.value)}>\n                        <MenuItem value={1}>Small</MenuItem>\n                        <MenuItem value={2}>Medium</MenuItem>\n                        <MenuItem value={3}>Large</MenuItem>\n                    </Select>\n                </FormControl>\n            </>\n        )\n    }\n    else if (type === 'cpu') {\n        createHTML = (\n            <>\n                <FormControl>\n                    <TextField type=\"number\" placeholder=\"Clock Speed (GHz)\" name=\"clockSpeed\" value={clockSpeed} onChange={e => setClockSpeed(e.target.value)} />\n                </FormControl>\n            </>\n        )\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await dispatch(makePart(type, name,\n            manufacturer, pictureUrl,\n            price, size,\n            clockSpeed, liquid,\n            SSD, gbSize,\n            VRAM, watts));\n        setPictureUrl(\"\");\n    }\n\n    return (\n        <Grid>\n            <form method=\"POST\" action=\"/api/parts\" onSubmit={handleSubmit}>\n                <FormControl>\n                    <TextField type=\"text\" placeholder=\"name\" name=\"name\" value={name} onChange={e => setName(e.target.value)} />\n                    <TextField type=\"text\" placeholder=\"manufacturer\" name=\"manufacturer\" value={manufacturer} onChange={e => setManufacturer(e.target.value)} />\n                    <TextField type=\"url\" placeholder=\"pictureUrl\" name=\"pictureUrl\" value={pictureUrl} onChange={e => setPictureUrl(e.target.value)} />\n                    <TextField type=\"number\" placeholder=\"price\" name=\"price\" value={price} onChange={e => setPrice(e.target.value)} />\n                    {createHTML}\n                    <button type=\"submit\">Create</button>\n                </FormControl>\n            </form>\n        </Grid>\n    );\n}\nexport default CreatePart;\n","import { AppBar, Button, Toolbar } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../store/auth';\nimport { makeStyles } from '@material-ui/core/styles';\nimport pickle from '../images/pickle.png';\n\nconst useStyles = makeStyles((theme) => ({\n\n    appbar: {\n        backgroundColor: \"#553a0f\",\n    },\n\n    space: {\n        justifyContent: \"space-between\",\n    },\n\n}))\n\n\nfunction NavBar() {\n    const loggedin = useSelector(state => !!state.auth.user.id);\n    const dispatch = useDispatch();\n    const classes = useStyles()\n    let navarino = '';\n    let createBuild = '';\n\n    const handleLogout = () => {\n        dispatch(logout());\n        document.location.reload();\n    }\n\n    if (loggedin) {\n        createBuild = <Button href=\"/createbuild\">Create a Build</Button>\n        navarino = <Button onClick={handleLogout}>Logout</Button>\n    }\n    else {\n        createBuild = <Button href=\"/signup\">Sign Up</Button>\n        navarino = <Button href=\"/login\">Login</Button>\n    }\n\n    return (\n        <>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Toolbar className={classes.space}>\n                    <Button href=\"/\">Home</Button>\n                    <Button>\n                        <img src={pickle} alt=\"WHERES MY PICKLE\" style={{ width: \"5%\", height: \"5%\" }} />\n                        <h1 style={{ color: \"#95b73c\" }}>PC PICKLE</h1>\n                    </Button>\n                    <div>\n                        {createBuild}\n                        {navarino}\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </>\n    );\n}\nexport default NavBar;\n","import { Divider, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    bar: {\n        backgroundColor: \"#95b73c\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: \"0px\",\n    },\n\n    link: {\n        textDecoration: \"none\",\n        color: \"black\",\n    },\n}))\n\n\nfunction PartsBar() {\n    const classes = useStyles()\n\n    return (\n        <>\n\n            <Grid container spacing={3} className={classes.bar}>\n                <Grid item>\n                    <NavLink to='/Cases' className={classes.link}>Cases</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/MotherBoards' className={classes.link}>Mother Boards</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/CPU' className={classes.link}>CPU</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/RAM' className={classes.link}>RAM</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/PowerSupply' className={classes.link}>Power Supplies</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/Cooler' className={classes.link}>Coolers</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/GPU' className={classes.link}>GPU</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/NetworkCard' className={classes.link}>Network Cards</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/HardDrive' className={classes.link}>Hard Drives</NavLink>\n                </Grid>\n            </Grid>\n            <Divider />\n        </>\n    );\n}\nexport default PartsBar;\n","import React from 'react';\n\n\nfunction Parts() {\n    return (\n        <>\n            <h1>PARTS</h1>\n        </>\n    );\n}\n\nexport default Parts;\n","import React from 'react';\n\n\nfunction Part() {\n    return (\n        <>\n            <h1>PART</h1>\n        </>\n    );\n}\n\nexport default Part;\n","import React from 'react';\n\n\nfunction Build() {\n    return (\n        <>\n            <h1>Make a build</h1>\n        </>\n    );\n}\n\nexport default Build;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport {setUser} from './store/auth'\nimport SignupPage from './pages/SignupPage';\nimport LoginPage from './pages/LoginPage';\nimport { CssBaseline } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { AuthRoute } from './components/utils/Routes';\nimport Home from './pages/Home';\nimport CreatePart from './pages/CreatePart';\nimport NavBar from './components/NavBar';\nimport PartsBar from './components/PartsBar';\nimport Parts from './pages/Parts';\nimport Part from './pages/Part';\nimport Build from './pages/Build';\n\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const dispatch = useDispatch()\n  useEffect(()=>{\n      const loadUser = async () => {\n        const res = await fetch(\"/api/session/current_user\");\n        if (res.ok) {\n          res.data = await res.json(); // current user info\n          dispatch(setUser(res.data.user))\n        }\n        setLoading(false);\n      }\n      loadUser();\n    }, [dispatch]);\n\n  const currentUser = useSelector(state => state.auth.user);\n\n  if (loading) {\n    return <p>loading...</p>\n  }\n  return (\n    <>\n        <CssBaseline/>\n        <BrowserRouter>\n            <NavBar />\n            <PartsBar />\n            <Switch>\n                <AuthRoute exact path='/signup' component={SignupPage} currentUserId={currentUser.id}/>\n                <AuthRoute exact path='/login' component={LoginPage} currentUserId={currentUser.id}/>\n                <Route exact path='/create/:part' component={CreatePart} currentUserId={currentUser.id}/>\n                <Route exact path='/createbuild' component={Build} currentUserId={currentUser.id}/>\n                <Route exact path='/:part' component={Parts} currentUserId={currentUser.id}/>\n                <Route exact path='/:part/:id' component={Part} currentUserId={currentUser.id}/>\n                <Route exact path='/' component={Home} currentUserId={currentUser.id}/>\n            </Switch>\n        </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport auth from './auth';\nimport partsReducer from './parts';\n\n\nconst rootReducer = combineReducers({\n  auth,\n  partsReducer,\n});\n\nlet storeEnhancer;\n\nif (process.env.NODE_ENV !== 'production') {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  storeEnhancer = composeEnhancers(applyMiddleware(thunk));\n} else {\n  storeEnhancer = applyMiddleware(thunk);\n}\n\nexport default function configureStore(initialState) {\n  return createStore(\n    rootReducer,\n    initialState,\n    storeEnhancer\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store/configureStore'\nimport { Provider } from 'react-redux'\n\n\n\nconst store = configureStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}