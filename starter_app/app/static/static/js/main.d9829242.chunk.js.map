{"version":3,"sources":["store/auth.js","pages/SignupPage.js","pages/LoginPage.js","components/utils/Routes.js","store/parts.js","store/builds.js","components/Builds.js","pages/Home.js","pages/CreatePart.js","components/NavBar.js","components/PartsBar.js","pages/Parts.js","pages/Part.js","pages/Build.js","pages/CreateBuild.js","components/Footer.js","App.js","store/configureStore.js","index.js"],"names":["setUser","user","type","registerErrors","errors","login","username","password","dispatch","a","csrfToken","Cookies","get","fetch","method","headers","body","JSON","stringify","res","json","data","ok","signup","email","useStyles","makeStyles","SignupPage","useDispatch","useState","setUsername","setPassword","confirmPassword","setConfirmPassword","setEmail","userToCreate","setUserToCreate","setErrors","authErrors","useSelector","state","auth","useEffect","validateUser","Object","values","Grid","container","style","justifyContent","textAlign","marginTop","Box","border","padding","id","className","Divider","width","margin","color","display","flexDirection","alignContent","map","err","i","marginBottom","key","action","onSubmit","e","preventDefault","FormControl","TextField","InputLabelProps","size","placeholder","name","value","onChange","target","Button","backgroundColor","to","root","LoginPage","classes","handleSubmit","window","location","href","demoLogin","onClick","AuthRoute","Component","component","path","currentUserId","exact","render","props","removePart","partId","fetchParts","parts","makePart","manufacturer","pictureUrl","price","clockSpeed","liquid","SSD","gbSize","VRAM","watts","part","removeBuild","buildId","makeBuild","title","description","user_id","caseId","motherBoardId","cpuId","coolerId","hardDriveId","ramId","gpuId","powerSupplyId","networkCardId","build","Builds","userId","builds","buildsReducer","undefined","handleDelete","deleteBuild","document","reload","object","item","xs","src","alt","height","link","userbuilds","theme","add","textDecoration","Home","partsReducer","cases","motherboard","ram","gpu","cpu","hardDrive","powerSupply","networkCard","cooler","handlePartDelete","console","log","deletePart","spacing","borderRight","borderBottom","mobos","cpus","gpus","powerSupplies","hardDrives","networkCards","coolers","CreatePart","setName","setManufacturer","setPictureUrl","setPrice","setSize","setClockSpeed","setLiquid","setSSD","setgbSize","setVRAM","setWatts","pathname","split","createHTML","InputLabel","Select","MenuItem","FormControlLabel","control","Checkbox","label","toUpperCase","appbar","space","NavBar","loggedin","navarino","createBuild","AppBar","position","Toolbar","bar","alignItems","PartsBar","Parts","image","Part","Build","fetchBuild","tableBody","typeId","TableRow","TableCell","TableContainer","Paper","marginLeft","marginRight","Table","TableHead","TableBody","CreateBuild","setTitle","setDescription","Case","setCase","motherBoard","setMotherBoard","setCpu","setCooler","setHardDrive","setGpu","setRam","setPowerSupply","setNetworkCard","user_Id","anchorEl1","setAnchorEl1","anchorEl2","setAnchorEl2","anchorEl3","setAnchorEl3","anchorEl4","setAnchorEl4","anchorEl5","setAnchorEl5","anchorEl6","setAnchorEl6","anchorEl7","setAnchorEl7","anchorEl8","setAnchorEl8","anchorEl9","setAnchorEl9","handleClose","aria-controls","aria-haspopup","currentTarget","Menu","anchorEl","keepMounted","open","Boolean","onClose","Footer","App","storeEnhancer","loading","setLoading","stats","loadUser","currentUser","CssBaseline","rootReducer","combineReducers","newState","assign","currentErrors","errorIds","keys","forEach","errorId","freeze","applyMiddleware","thunk","initialState","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9829242.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\n\nconst SET_USER = 'auth/SET_USER';\nconst REMOVE_USER = 'auth/REMOVE_USER';\nconst SIGNUP = 'auth/SIGNUP';\nconst REGISTER_ERRORS = 'auth/REGISTER_ERRORS'\nconst CLEAR_ERRORS = 'auth/CLEAR_ERRORS'\n\nexport const setUser = (user) => {\n    return {\n        type: SET_USER,\n        user\n    };\n};\n\nexport const removeUser = () => {\n    return {\n        type: REMOVE_USER\n    }\n}\n\nexport const newUser = (user) => ({\n    type: SIGNUP,\n    user\n})\n\nexport const registerErrors = (errors) => {\n    return ({\n        type: REGISTER_ERRORS,\n        errors\n    })\n}\n\nexport const clearErrors = () => {\n    return ({\n        type: CLEAR_ERRORS,\n    })\n}\n\nexport const login = (username, password) => async dispatch => {\n    if (!username || !password) {\n        return\n    }\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n    const res = await fetch('/api/session/', {\n        method: \"put\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: JSON.stringify({ username, password })\n    });\n    const data = await res.json();\n    if (res.ok && !data[\"errors\"]) {\n        dispatch(setUser(data.user));\n        res.data = data\n    } else {\n        res.errors = data[\"errors\"]\n        dispatch(registerErrors(data[\"errors\"]))\n    }\n    return res;\n};\n\nexport const signup = (username, email, password) => {\n    return async (dispatch) => {\n        if (!username || !password || !email) {\n            return;\n        }\n        const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n        const res = await fetch('/api/session/', {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n            },\n            body: JSON.stringify({ username, email, password })\n        });\n        const data = await res.json();\n        if (res.ok && !data[\"errors\"]) {\n            dispatch(newUser(data));\n            res.data = data;\n        } else {\n            res.errors = data[\"errors\"]\n            dispatch(registerErrors(data[\"errors\"]))\n        }\n        return res;\n    };\n}\n\n\n\nexport const logout = () => async dispatch => {\n    const res = await fetch('/api/session/logout', {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    if (res.ok) {\n        dispatch(removeUser());\n    }\n\n    return res;\n}\n\nexport default function authReducer(state = { user: { id: null } }, action) {\n    const newState = Object.assign({}, state)\n    const currentErrors = Object.assign({}, state.errors)\n    switch (action.type) {\n        case SET_USER:\n            newState.user = action.user\n            return newState\n        case SIGNUP:\n            return action.user\n        case REGISTER_ERRORS:\n            newState.errors = currentErrors\n            const errorIds = Object.keys(action.errors)\n            errorIds.forEach(errorId => {\n                newState.errors[errorId] = action.errors[errorId]\n            })\n            return newState;\n        case REMOVE_USER:\n            return { user: { id: null } };\n        case CLEAR_ERRORS:\n            newState.errors = {}\n            return newState\n        default:\n            return state;\n\n    }\n}\n","import React, { useEffect } from 'react';\nimport { useState } from 'react'\nimport { signup, registerErrors, clearErrors } from '../store/auth'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { Box, FormControl, Grid } from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles({\n\n})\n\n\nfunction SignupPage() {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [userToCreate, setUserToCreate] = useState({})\n  const [errors, setErrors] = useState([])\n  const authErrors = useSelector(state => state.auth.errors)\n\n  useEffect(() => {\n    dispatch(clearErrors())\n  }, [dispatch])\n\n  useEffect(() => {\n    const validateUser = async () => {\n      const username = userToCreate.username\n      const email = userToCreate.email\n      const password = userToCreate.password\n      await dispatch(signup(username, email, password))\n    }\n    if (userToCreate !== {}) {\n      validateUser()\n    }\n  }, [userToCreate, dispatch])\n\n  useEffect(() => {\n    if (authErrors) setErrors(Object.values(authErrors))\n  }, [authErrors])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!username) {\n      dispatch(registerErrors({ \"8\": \"please enter a username\" }))\n    }\n    if (!email) {\n      dispatch(registerErrors({ \"10\": \"please enter an email address\" }))\n    }\n    if (!password || !confirmPassword) {\n      dispatch(registerErrors({ \"11\": \"please enter a password and confirm it\" }))\n    }\n    if (!(password === confirmPassword)) {\n      dispatch(registerErrors({ \"9\": \"password fields do not match\" }))\n    }\n    if ((password === confirmPassword) && username && email) {\n      setUserToCreate({ username, email, password })\n    }\n  }\n\n  const handleUsernameInput = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const handleEmailInput = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const handlePasswordInput = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const handleConfirmPasswordInput = (e) => {\n    setConfirmPassword(e.target.value)\n  }\n\n  return (\n    <>\n      <Grid container style={{ justifyContent: \"center\", textAlign: \"center\", marginTop: \"5%\" }}>\n        <Box border={1} style={{ padding: \"2%\" }}>\n          <div id=\"main-content-sign-up\">\n            <h1 className=\"login-and-signup-header\">Sign up for your account</h1>\n            <Divider style={{ width: \"100%\", margin: \"10px\" }} />\n            <div style={{ color: \"red\", display: \"flex\", flexDirection: \"column\", alignContent: \"center\" }}>\n              {errors ? errors.map((err, i) => {\n                return (<p style={{ marginTop: \"3px\", marginBottom: \"3px\" }} key={i}>{errors[i]}</p>)\n              }) : \"\"}\n            </div>\n            <form className='signup-form' method=\"POST\" action=\"/api/session\" onSubmit={handleSubmit}>\n              <FormControl>\n                <TextField InputLabelProps={{ style: { color: \"grey\" } }} type=\"text\" size=\"medium\" placeholder=\"username\" name=\"username\" value={username} onChange={handleUsernameInput} />\n                <TextField InputLabelProps={{ style: { color: \"grey\" } }} type=\"text\" size=\"medium\" placeholder=\"email\" name=\"email\" value={email} onChange={handleEmailInput} />\n                <TextField InputLabelProps={{ style: { color: \"grey\" } }} type=\"password\" size=\"medium\" placeholder=\"password\" name=\"password\" value={password} onChange={handlePasswordInput} />\n                <TextField InputLabelProps={{ style: { color: \"grey\" } }} style={{ color: \"red\" }} type=\"password\" size=\"medium\" placeholder=\"confirm password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordInput} />\n                <Button style={{ backgroundColor: \"#fbc11a\" }} type=\"submit\">Sign Up and Log In</Button>\n              </FormControl>\n            </form>\n            <NavLink id='login-navlink' to=\"/login\"><p id=\"signUpText\">Already have an account?  Log In</p></NavLink>\n          </div>\n        </Box>\n      </Grid>\n    </>\n  )\n}\n\nexport default SignupPage;\n","import React, { useEffect } from 'react';\nimport { useState } from 'react'\nimport { login, registerErrors, clearErrors } from '../store/auth'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Box, Button, FormControl, Grid } from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        textAlign: \"center\",\n    }\n\n}))\n\n\nfunction LoginPage() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState(\"\");\n    const authErrors = useSelector(state => state.auth.errors);\n\n    useEffect(() => {\n        dispatch(clearErrors())\n    }, [dispatch])\n\n    useEffect(() => {\n        if (authErrors) setErrors(Object.values(authErrors))\n    }, [authErrors])\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        if (!username || !password) {\n            await dispatch(registerErrors({ \"1\": \"Must enter username and password\" }));\n        } else {\n            const res = await dispatch(login(username, password));\n\n            if (res.errors) {\n                await dispatch(registerErrors({ \"1\": \"Incorrect username or password!\" }));\n            }\n            else {\n                window.location.href = \"/\";\n            }\n        }\n    }\n\n    const demoLogin = async (e) => {\n        e.preventDefault();\n        await dispatch(login('DemoUser', 'password'));\n        window.location.href = \"/\";\n    }\n\n    return (\n        <>\n            <Grid container style={{ justifyContent: \"center\", marginTop: \"5%\" }}>\n                <Box border={1} style={{ padding: \"2%\" }}>\n                    <div className={classes.root} >\n                        <h1>Welcome to PC Pickle</h1>\n                        <div style={{ color: \"red\", display: \"flex\", flexDirection: \"column\" }}>\n                            {errors ? errors.map((err, i) => {\n                                return (<p style={{ marginTop: \"3px\", marginBottom: \"3px\" }} key={i}>{errors[i]}</p>)\n                            }) : \"\"}\n                        </div>\n                        <form className='login-form' method=\"PUT\" action=\"/api/session\" onSubmit={handleSubmit}>\n                            <FormControl>\n                                <Button style={{backgroundColor: \"#fbc11a\", marginBottom: \"10px\"}} onClick={demoLogin}>Login As a Demo User</Button>\n                                <TextField type=\"text\" placeholder=\"username\" name=\"username\" value={username} onChange={e => setUsername(e.target.value)} />\n                                <TextField type=\"password\" placeholder=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n                                <Button style={{backgroundColor: \"#fbc11a\", marginTop: \"10px\"}} type=\"submit\">Log in</Button>\n                            </FormControl>\n                        </form>\n                        <NavLink to=\"/signup\"><p>Don't have an account?  Sign Up</p></NavLink>\n                    </div>\n                </Box>\n            </Grid>\n        </>\n\n    )\n\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const ProtectedRoute = ({ component: Component, path, currentUserId, exact }) => {\n    return (\n        <Route path={path} exact={exact} render={(props) => (\n            currentUserId ? <Component {...props} /> : <Redirect to='/' />\n        )} />\n    )\n}\n\nexport const AuthRoute = ({ component: Component, path, currentUserId, exact }) => {\n\n    return (\n        <Route\n            path={path}\n            exact={exact}\n            render={(props) =>\n                currentUserId ? <Redirect to={`/`} /> : <Component {...props} />\n            }\n        />\n    );\n};\n","import Cookies from 'js-cookie'\n\nconst GET_PARTS = 'auth/GET_PARTS';\nconst GET_PART = 'auth/GET_PART';\nconst DELETE_PART = 'auth/DELETE_PART';\nconst CREATE_PART = 'auth/CREATE_PART';\n\nconst getParts = (parts) => {\n    return {\n        type: GET_PARTS,\n        parts,\n    };\n};\n\n\nconst getPart = (part) => {\n    return {\n        type: GET_PART,\n        part,\n    };\n};\n\nconst createPart = (part) => ({\n    type: CREATE_PART,\n    part\n})\n\nconst removePart = (partId) => {\n    return {\n        type: DELETE_PART,\n        partId,\n    };\n};\n\n\nexport const fetchParts = () => {\n    return async (dispatch) => {\n        const res = await fetch('/api/parts/');\n        const data = await res.json();\n        dispatch(getParts(data));\n        return res;\n    };\n};\n\nexport const fetchPart = (type, id) => {\n    return async (dispatch) => {\n        if (!id) {\n            return null;\n        }\n        const res = await fetch(`/api/parts/${type}/${id}`); // Using proxy in our package.json,\n        const data = await res.json();\n        dispatch(getPart(data.part));\n        return res;\n    };\n};\n\nexport const makePart = (type, name, manufacturer, pictureUrl, price, size, clockSpeed, liquid, SSD, gbSize, VRAM, watts) => {\n    return async (dispatch) => {\n        const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n        const res = await fetch(`/api/parts/${type}`, {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n            },\n            body: JSON.stringify({ type, name, manufacturer, pictureUrl, price, size, clockSpeed, liquid, SSD, gbSize, VRAM, watts})\n        });\n        const data = await res.json();\n        if (res.ok) {\n            dispatch(createPart(data));\n            res.data = data;\n        }\n        return res;\n    };\n}\n\nexport const deletePart = (type, partId) => async dispatch => {\n    console.log(type)\n    debugger\n    const res = await fetch(`/api/parts/delete/${type}/${partId}`, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n    debugger\n\n    if (res.ok) {\n        dispatch(removePart(partId));\n    }\n\n    return res;\n}\n\nexport default function partsReducer(state = {}, action) {\n    Object.freeze(state);\n    switch (action.type) {\n        case GET_PARTS:\n            return action.parts;\n        case GET_PART:\n            return action.part;\n        case CREATE_PART:\n            return action.part;\n        case DELETE_PART:\n            return action.part;\n        default:\n            return state;\n    }\n};\n","import Cookies from 'js-cookie'\n\nconst GET_BUILDS = 'auth/GET_BUILDS';\nconst GET_BUILD = 'auth/GET_BUILD';\nconst DELETE_BUILD = 'auth/DELETE_BUILD';\nconst CREATE_BUILD = 'auth/CREATE_BUILD';\n\nconst getBuilds = (builds) => {\n    return {\n        type: GET_BUILDS,\n        builds,\n    };\n};\n\nconst getBuild = (build) => {\n    return {\n        type: GET_BUILD,\n        build,\n    };\n};\n\nconst createBuild = (build) => ({\n    type: CREATE_BUILD,\n    build\n})\n\nconst removeBuild = (buildId) => {\n    return {\n        type: DELETE_BUILD,\n        buildId\n    };\n};\n\n\nexport const fetchBuilds = (userId) => {\n    return async (dispatch) => {\n        const res = await fetch(`/api/builds/${userId}`);\n        const data = await res.json();\n        dispatch(getBuilds(data));\n        return res;\n    };\n};\n\nexport const fetchBuild = (id) => {\n    return async (dispatch) => {\n        const res = await fetch(`/api/builds/build/${id}`);\n        const data = await res.json();\n        dispatch(getBuild(data));\n        return res;\n    };\n};\n\nexport const makeBuild = ( title, description, user_id, caseId, motherBoardId, cpuId, coolerId, hardDriveId, ramId, gpuId, powerSupplyId, networkCardId, pictureUrl) => {\n    return async (dispatch) => {\n        const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n        const res = await fetch(`/api/builds/`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n            },\n            body: JSON.stringify({ title, description, user_id, caseId, motherBoardId, cpuId, coolerId, hardDriveId, ramId, gpuId, powerSupplyId, networkCardId, pictureUrl })\n        });\n        const data = await res.json();\n        if (res.ok) {\n            dispatch(createBuild(data));\n            res.data = data;\n        }\n        return res;\n    };\n}\n\nexport const deleteBuild = (buildId) => async dispatch => {\n    const res = await fetch(`/api/builds/delete/${buildId}`, {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    if (res.ok) {\n        dispatch(removeBuild(buildId));\n    }\n\n    return res;\n}\n\n\nexport default function buildsReducer(state = {}, action) {\n    Object.freeze(state);\n    switch (action.type) {\n        case GET_BUILDS:\n            return action.builds;\n            case GET_BUILD:\n                return action.build;\n        case CREATE_BUILD:\n            return action.build;\n        case DELETE_BUILD:\n            return action.build;\n        default:\n            return state;\n    }\n};\n","import { Button, Divider, Grid } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deleteBuild, fetchBuilds } from '../store/builds';\n\n\nconst useStyles = makeStyles(() => ({\n\n}))\n\n\n\nfunction Builds() {\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.auth.user.id)\n\n    useEffect(() => {\n        dispatch(fetchBuilds(user))\n    }, [dispatch, user])\n\n    const builds = useSelector(state => state.buildsReducer)\n    if (builds.builds === undefined) {\n        return null;\n    }\n\n    const handleDelete = (e, buildId) => {\n        e.preventDefault();\n        dispatch(deleteBuild(buildId));\n        document.location.reload();\n    }\n\n    return (\n        <>\n            <h2>Featured Builds:</h2>\n            <Grid container>\n                {Object.values(builds.builds).map(object => {\n                    if (object.user_id === 1) {\n                        return (\n                            <Grid item xs={4} key={object.id}>\n                                <div key={object.id}>\n                                    <img src={object.pictureUrl} alt=\"oops\" style={{ width: \"35vh\", height: \"35vh\" }} />\n                                    <div>\n                                        <Button key={object.id} href={`/builds/${object.id}`} className={classes.link}>\n                                            <p>{object.title}</p>\n                                        </Button>\n                                        {(user === 1) ? <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handleDelete(e, object.id)}>X</Button> : ''}\n                                    </div>\n                                </div>\n                            </Grid>\n                        )\n                    }\n                    return '';\n                })}\n            </Grid>\n            <Divider />\n            <h2>Your Builds:</h2>\n            <Grid container>\n                {Object.values(builds.userbuilds).map(object => {\n                    if (object.user_id === user) {\n                        return (\n                            <Grid item xs={4} key={object.id}>\n                                <div key={object.id}>\n                                    <img src={object.pictureUrl} alt=\"oops\" style={{ width: \"35vh\", height: \"35vh\" }} />\n                                    <div>\n                                        <Button key={object.id} href={`/builds/${object.title}`} className={classes.link}>\n                                            <p>{object.title}</p>\n                                        </Button>\n                                        <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handleDelete(e, object.id)}>X</Button>\n                                    </div>\n                                </div>\n                            </Grid>\n                        )\n                    }\n                    return '';\n                })}\n            </Grid>\n        </>\n    );\n}\n\nexport default Builds;\n","import { Box, Button, Grid } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deletePart, fetchParts } from '../store/parts';\nimport Builds from '../components/Builds';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    add: {\n        backgroundColor: \"#4d9699\",\n        color: \"#fade98\",\n    },\n\n    link: {\n        textDecoration: \"none\",\n        color: \"black\",\n    }\n\n}))\n\nfunction Home() {\n    const classes = useStyles()\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchParts())\n    }, [dispatch])\n\n    const parts = useSelector(state => state.partsReducer)\n    const user = useSelector(state => state.auth.user.id)\n    let cases = '';\n    let motherboard = '';\n    let ram = '';\n    let gpu = '';\n    let cpu = '';\n    let hardDrive = '';\n    let powerSupply = '';\n    let networkCard = '';\n    let cooler = '';\n\n    if (user === 1) {\n        cases = (<div>\n            <Button className={classes.add} href=\"/create/cases\">Add a Case</Button>\n        </div>)\n        motherboard = (<div>\n            <Button className={classes.add} href=\"/create/mobos\">Add a MotherBoard</Button>\n        </div>)\n        cpu = (<div>\n            <Button className={classes.add} href=\"/create/cpus\">Add a CPU</Button>\n        </div>)\n        gpu = (<div>\n            <Button className={classes.add} href=\"/create/gpus\">Add a GPU</Button>\n        </div>)\n        powerSupply = (<div>\n            <Button className={classes.add} href=\"/create/powerSupplies\">Add a Power Supply</Button>\n        </div>)\n        hardDrive = (<div>\n            <Button className={classes.add} href=\"/create/hardDrives\">Add a Hard Drive</Button>\n        </div>)\n        networkCard = (<div>\n            <Button className={classes.add} href=\"/create/networkCards\">Add a Network Card</Button>\n        </div>)\n        cooler = (<div>\n            <Button className={classes.add} href=\"/create/coolers\">Add a Cooler</Button>\n        </div>)\n        ram = (<div>\n            <Button className={classes.add} href=\"/create/ram\">Add a RAM</Button>\n        </div>)\n\n    }\n\n    if (parts.cases === undefined) {\n        return null;\n    }\n    const handlePartDelete = (e, type, partId) => {\n        e.preventDefault();\n        dispatch(deletePart(type, partId))\n        document.location.reload();\n    }\n\n    return (\n        <>\n            <Grid container spacing={5}>\n                <Grid item xs={3}>\n                    <Box borderRight={1}>\n                        <Box borderBottom={1}>\n                            <h1 style={{ textAlign: \"center\" }}>Parts</h1>\n                        </Box>\n                        <Box borderBottom={1}>\n                            <h2 style={{ textAlign: \"center\" }}>Cases</h2>\n                            {Object.values(parts.cases).map(object => {\n                                return (\n                                    <div key={object.id}>\n                                        <Button key={object.id} href={`/cases/${object.id}`} className={classes.link}>\n                                            <img src={\"https://cdn4.iconfinder.com/data/icons/computer-hardware-and-devices-1/512/desktop-512.png\"} alt=\"\" style={{ width: \"7%\", height: \"7%\" }} />\n                                            <p>{object.name}</p>\n                                            {(user === 1) ? <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handlePartDelete(e, 'cases', object.id)}>X</Button> : ''}\n                                        </Button>\n                                    </div>\n                                )\n                            })}\n                            {cases}\n                        </Box>\n                        <Box borderBottom={1}>\n                            <h2 style={{ textAlign: \"center\" }}>Mother Boards</h2>\n                            {Object.values(parts.mobos).map(object => {\n                                return (\n                                    <div key={object.id}>\n                                        <Button key={object.id} href={`/mobos/${object.id}`} className={classes.link}>\n                                            <img src={\"https://cdn0.iconfinder.com/data/icons/computer-hardware-glyph-1/100/1-21-512.png\"} alt=\"\" style={{ width: \"7%\", height: \"7%\" }} />\n                                            <p>{object.name}</p>\n                                            {(user === 1) ? <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handlePartDelete(e, 'mobos', object.id)}>X</Button> : ''}\n                                        </Button>\n\n                                    </div>\n                                )\n                            })}\n                            {motherboard}\n                        </Box>\n                        <Box borderBottom={1}>\n                            <h2 style={{ textAlign: \"center\" }}>CPUs</h2>\n                            {Object.values(parts.cpus).map(object => {\n                                return (\n                                    <div key={object.id}>\n                                        <Button key={object.id} href={`/cpus/${object.id}`} className={classes.link}>\n                                            <img src={\"https://cdn1.iconfinder.com/data/icons/computer-hardware-531/64/Processor-chip-cpu-memory-ram-512.png\"} alt=\"\" style={{ width: \"7%\", height: \"7%\" }} />\n                                            <p>{object.name}</p>\n                                            {(user === 1) ? <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handlePartDelete(e, 'cpus', object.id)}>X</Button> : ''}\n                                        </Button>\n                                    </div>\n                                )\n                            })}\n                            {cpu}\n                        </Box>\n                        <Box borderBottom={1}>\n                            <h2 style={{ textAlign: \"center\" }}>GPUs</h2>\n                            {Object.values(parts.gpus).map(object => {\n                                return (\n                                    <div key={object.id}>\n                                        <Button key={object.id} href={`/gpus/${object.id}`} className={classes.link}>\n                                            <img src={\"https://cdn1.iconfinder.com/data/icons/hardware-software/100/gpu-512.png\"} alt=\"\" style={{ width: \"7%\", height: \"7%\" }} />\n                                            <p>{object.name}</p>\n                                            {(user === 1) ? <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handlePartDelete(e, 'gpus', object.id)}>X</Button> : ''}\n                                        </Button>\n                                    </div>\n                                )\n                            })}\n                            {gpu}\n                        </Box>\n                        <Box borderBottom={1}>\n                            <h2 style={{ textAlign: \"center\" }}>Power Supplies</h2>\n                            {Object.values(parts.powerSupplies).map(object => {\n                                return (\n                                    <div key={object.id}>\n                                        <Button key={object.id} href={`/powerSupplies/${object.id}`} className={classes.link}>\n                                            <img src={\"https://cdn0.iconfinder.com/data/icons/computer-46/100/power_supply-512.png\"} alt=\"\" style={{ width: \"7%\", height: \"7%\" }} />\n                                            <p>{object.name}</p>\n                                            {(user === 1) ? <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handlePartDelete(e, 'powerSupplies', object.id)}>X</Button> : ''}\n                                        </Button>\n                                    </div>\n                                )\n                            })}\n                            {powerSupply}\n                        </Box>\n                        <Box borderBottom={1}>\n                            <h2 style={{ textAlign: \"center\" }}>Hard Drives</h2>\n                            {Object.values(parts.hardDrives).map(object => {\n                                return (\n                                    <div key={object.id}>\n                                        <Button key={object.id} href={`/hardDrives/${object.id}`} className={classes.link}>\n                                            <img src={\"https://cdn2.iconfinder.com/data/icons/digital-marketing-2-11/64/117-512.png\"} alt=\"\" style={{ width: \"7%\", height: \"7%\" }} />\n                                            <p>{object.name}</p>\n                                            {(user === 1) ? <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handlePartDelete(e, 'hardDrives', object.id)}>X</Button> : ''}\n                                        </Button>\n                                    </div>\n                                )\n                            })}\n                            {hardDrive}\n                        </Box>\n                        <Box borderBottom={1}>\n                            <h2 style={{ textAlign: \"center\" }}>Network Cards</h2>\n                            {Object.values(parts.networkCards).map(object => {\n                                return (\n                                    <div key={object.id}>\n                                        <Button key={object.id} href={`/networkCards/${object.id}`} className={classes.link}>\n                                            <img src={\"https://cdn0.iconfinder.com/data/icons/internet-devices/128/Set2-08-512.png\"} alt=\"\" style={{ width: \"7%\", height: \"7%\" }} />\n                                            <p>{object.name}</p>\n                                            {(user === 1) ? <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handlePartDelete(e, 'networkCards', object.id)}>X</Button> : ''}\n                                        </Button>\n                                    </div>\n                                )\n                            })}\n                            {networkCard}\n                        </Box>\n                        <Box borderBottom={1}>\n                            <h2 style={{ textAlign: \"center\" }}>Coolers</h2>\n                            {Object.values(parts.coolers).map(object => {\n                                return (\n                                    <div key={object.id}>\n                                        <Button key={object.id} href={`/coolers/${object.id}`} className={classes.link}>\n                                            <img src={\"https://static.thenounproject.com/png/1576762-200.png\"} alt=\"\" style={{ width: \"7%\", height: \"7%\" }} />\n                                            <p>{object.name}</p>\n                                            {(user === 1) ? <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handlePartDelete(e, 'coolers', object.id)}>X</Button> : ''}\n                                        </Button>\n                                    </div>\n                                )\n                            })}\n                            {cooler}\n                        </Box>\n                        <Box borderBottom={0}>\n                            <h2 style={{ textAlign: \"center\" }}>RAM</h2>\n                            {Object.values(parts.ram).map(object => {\n                                return (\n                                    <div key={object.id}>\n                                        <Button key={object.id} href={`/ram/${object.id}`} className={classes.link}>\n                                            <img src={\"https://cdn0.iconfinder.com/data/icons/mobile-phone-componets-1/144/mobile-icon_05-512.png\"} alt=\"\" style={{ width: \"7%\", height: \"7%\" }} />\n                                            <p>{object.name}</p>\n                                            {(user === 1) ? <Button size=\"small\" style={{ color: \"red\" }} onClick={(e) => handlePartDelete(e, 'ram', object.id)}>X</Button> : ''}\n                                        </Button>\n                                    </div>\n                                )\n                            })}\n                            {ram}\n                        </Box>\n                    </Box>\n                </Grid>\n                <Grid item xs={8}>\n                    <h1 style={{ textAlign: \"center\" }}>Builds</h1>\n                    <Builds />\n                </Grid>\n            </Grid>\n        </>\n    );\n}\nexport default Home;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport { Box, Button, Checkbox, FormControl, FormControlLabel, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { makePart } from '../store/parts';\n\n\n\nfunction CreatePart() {\n    const dispatch = useDispatch();\n    const [name, setName] = useState(\"\");\n    const [manufacturer, setManufacturer] = useState(\"\");\n    const [pictureUrl, setPictureUrl] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [size, setSize] = useState(\"\");\n    const [clockSpeed, setClockSpeed] = useState(\"\");\n    const [liquid, setLiquid] = useState(false);\n    const [SSD, setSSD] = useState(false);\n    const [gbSize, setgbSize] = useState(\"\");\n    const [VRAM, setVRAM] = useState(\"\");\n    const [watts, setWatts] = useState(\"\");\n    const type = window.location.pathname.split('/')[2];\n    let createHTML = '';\n\n    if (type === 'cases') {\n        createHTML = (\n            <>\n                <FormControl>\n                    <InputLabel>Size</InputLabel>\n                    <Select placeholder=\"size\" name=\"size\" value={size} onChange={e => setSize(e.target.value)}>\n                        <MenuItem value={1}>Small</MenuItem>\n                        <MenuItem value={2}>Medium</MenuItem>\n                        <MenuItem value={3}>Large</MenuItem>\n                    </Select>\n                </FormControl>\n            </>\n        )\n    }\n    else if (type === 'mobos') {\n        createHTML = (\n            <>\n                <FormControl>\n                    <InputLabel>Size</InputLabel>\n                    <Select placeholder=\"size\" name=\"size\" value={size} onChange={e => setSize(e.target.value)}>\n                        <MenuItem value={1}>Small</MenuItem>\n                        <MenuItem value={2}>Medium</MenuItem>\n                        <MenuItem value={3}>Large</MenuItem>\n                    </Select>\n                </FormControl>\n            </>\n        )\n    }\n    else if (type === 'cpus') {\n        createHTML = (\n            <>\n                <FormControl>\n                    <TextField type=\"number\" placeholder=\"Clock Speed (GHz)\" name=\"clockSpeed\" value={clockSpeed} onChange={e => setClockSpeed(e.target.value)} />\n                </FormControl>\n            </>\n        )\n    }\n    else if (type === 'hardDrives') {\n        createHTML = (\n            <>\n                <FormControl>\n                    <TextField type=\"number\" placeholder=\"GBs\" name=\"gbSize\" value={gbSize} onChange={e => setgbSize(e.target.value)} />\n                </FormControl>\n                <FormControlLabel\n                    control={<Checkbox label=\"SSD?\" name=\"SSD\" value={SSD} onChange={() => setSSD(!SSD)} />}\n                    label=\"SSD?\"\n                />\n\n            </>\n        )\n    }\n    else if (type === 'coolers') {\n        createHTML = (\n            <>\n                <FormControlLabel\n                    control={<Checkbox label=\"Liquid?\" name=\"liquid\" value={liquid} onChange={() => setLiquid(!liquid)} />}\n                    label=\"Liquid?\"\n                />\n\n            </>\n        )\n    }\n    else if (type === 'gpus') {\n        createHTML = (\n            <>\n                <FormControl>\n                    <TextField type=\"number\" placeholder=\"VRAM (GBs)\" name=\"VRAM\" value={VRAM} onChange={e => setVRAM(e.target.value)} />\n                </FormControl>\n            </>\n        )\n    }\n    else if (type === 'powerSupplies') {\n        createHTML = (\n            <>\n                <FormControl>\n                    <TextField type=\"number\" placeholder=\"watts\" name=\"watts\" value={watts} onChange={e => setWatts(e.target.value)} />\n                </FormControl>\n            </>\n        )\n    }\n    else if (type === 'ram') {\n        createHTML = (\n            <>\n                <FormControl>\n                    <TextField type=\"number\" placeholder=\"GBs per stick\" name=\"gbSize\" value={gbSize} onChange={e => setgbSize(e.target.value)} />\n                </FormControl>\n            </>\n        )\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await dispatch(makePart(type, name,\n            manufacturer, pictureUrl,\n            price, size,\n            clockSpeed, liquid,\n            SSD, gbSize,\n            VRAM, watts));\n        setPictureUrl(\"\");\n        window.location.href = \"/\";\n    }\n\n    return (\n        <>\n            <h1 style={{ textAlign: \"center\" }}>Create {type.toUpperCase()}</h1>\n            <Grid container style={{ justifyContent: \"center\", marginTop: \"5%\" }}>\n                <Box border={1} style={{ padding: \"2%\" }}>\n                    <form method=\"POST\" action=\"/api/parts\" onSubmit={handleSubmit}>\n                        <FormControl>\n                            <TextField type=\"text\" placeholder=\"name\" name=\"name\" value={name} onChange={e => setName(e.target.value)} />\n                            <TextField type=\"text\" placeholder=\"manufacturer\" name=\"manufacturer\" value={manufacturer} onChange={e => setManufacturer(e.target.value)} />\n                            <TextField type=\"url\" placeholder=\"pictureUrl\" name=\"pictureUrl\" value={pictureUrl} onChange={e => setPictureUrl(e.target.value)} />\n                            <TextField type=\"number\" placeholder=\"price\" name=\"price\" value={price} onChange={e => setPrice(e.target.value)} />\n                            {createHTML}\n                            <Button type=\"submit\">Create</Button>\n                        </FormControl>\n                    </form>\n                </Box>\n            </Grid>\n        </>\n    );\n}\nexport default CreatePart;\n","import { AppBar, Button, Toolbar } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../store/auth';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\n    appbar: {\n        backgroundColor: \"#4d9699\",\n        margin: \"0px\",\n    },\n\n    space: {\n        justifyContent: \"space-between\",\n    },\n\n}))\n\n\nfunction NavBar() {\n    const loggedin = useSelector(state => !!state.auth.user.id);\n    const dispatch = useDispatch();\n    const classes = useStyles()\n    let navarino = '';\n    let createBuild = '';\n\n    const handleLogout = () => {\n        dispatch(logout());\n        document.location.reload();\n    }\n\n    if (loggedin) {\n        createBuild = <Button href=\"/createbuild\">Create a Build</Button>\n        navarino = <Button onClick={handleLogout}>Logout</Button>\n    }\n    else {\n        createBuild = <Button href=\"/signup\">Sign Up</Button>\n        navarino = <Button href=\"/login\">Login</Button>\n    }\n\n    return (\n        <>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Toolbar className={classes.space}>\n                    <Button href=\"/\">Home</Button>\n                    <Button href=\"/\" style={{ marginBottom: \"10px\" }}>\n                        <img src={'https://cdn3.iconfinder.com/data/icons/vegetables-18/100/vegetable_colour-31-512.png'} alt=\"\" style={{ width: \"5%\", height: \"5%\" }} />\n                        <h1 style={{ color: \"#5f6c11\" }}>PC PICKLE</h1>\n                    </Button>\n                    <div>\n                        {createBuild}\n                        {navarino}\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </>\n    );\n}\nexport default NavBar;\n","import { AppBar, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    bar: {\n        backgroundColor: \"#fbc11a\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n\n    link: {\n        textDecoration: \"none\",\n        color: \"black\",\n    },\n}))\n\n\nfunction PartsBar() {\n    const classes = useStyles()\n\n    return (\n        <>\n            <Grid container spacing={3} className={classes.bar}>\n                <Grid item>\n                    <NavLink to='/cases' className={classes.link}>Cases</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/mobos' className={classes.link}>Mother Boards</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/cpus' className={classes.link}>CPU</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/ram' className={classes.link}>RAM</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/powerSupplies' className={classes.link}>Power Supplies</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/coolers' className={classes.link}>Coolers</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/gpus' className={classes.link}>GPU</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/networkCards' className={classes.link}>Network Cards</NavLink>\n                </Grid>\n                <Grid item>\n                    <NavLink to='/hardDrives' className={classes.link}>Hard Drives</NavLink>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\nexport default PartsBar;\n","import { Button, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchParts } from '../store/parts';\n\nconst useStyles = makeStyles(() => ({\n\n}))\n\n\nfunction Parts() {\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const type = window.location.pathname.split('/')[1];\n    const parts = useSelector(state => state.partsReducer)\n    let image = \"\";\n\n    useEffect(() => {\n        dispatch(fetchParts())\n    }, [dispatch])\n\n    if (parts[type] === undefined) {\n        return null;\n    }\n\n    if(type === 'cases'){\n        image = \"https://cdn4.iconfinder.com/data/icons/computer-hardware-and-devices-1/512/desktop-512.png\";\n    }\n    else if(type === 'mobos'){\n        image = \"https://cdn0.iconfinder.com/data/icons/computer-hardware-glyph-1/100/1-21-512.png\";\n    }\n    else if(type === 'cpus'){\n        image = \"https://cdn1.iconfinder.com/data/icons/computer-hardware-531/64/Processor-chip-cpu-memory-ram-512.png\";\n    }\n    else if(type === 'ram'){\n        image = \"https://cdn0.iconfinder.com/data/icons/mobile-phone-componets-1/144/mobile-icon_05-512.png\";\n    }\n    else if(type === 'powerSupplies'){\n        image = \"https://cdn0.iconfinder.com/data/icons/computer-46/100/power_supply-512.png\";\n    }\n    else if(type === 'coolers'){\n        image = \"https://static.thenounproject.com/png/1576762-200.png\";\n    }\n    else if(type === 'gpus'){\n        image = \"https://cdn1.iconfinder.com/data/icons/hardware-software/100/gpu-512.png\";\n    }\n    else if(type === 'hardDrives'){\n        image = \"https://cdn2.iconfinder.com/data/icons/digital-marketing-2-11/64/117-512.png\";\n    }\n    else if(type === 'networkCards'){\n        image = \"https://cdn0.iconfinder.com/data/icons/internet-devices/128/Set2-08-512.png\";\n    }\n\n\n    return (\n        <div>\n            <h1 style={{ textAlign: \"center\" }}>{type.toUpperCase()}</h1>\n            <Grid container spacing={2}>\n                {Object.values(parts[type]).map(object => {\n                    return (\n                        <>\n                            <Grid xs={2} />\n                            <Grid xs={8} key={object.id} style={{ textAlign: \"center\" }}>\n                                <Button key={object.id} href={`/${type}/${object.id}`} className={classes.link}>\n                                    <img src={`${image}`} alt=\"Not Found\" style={{ width: \"7%\", height: \"7%\" }} />\n                                    <p>{object.name}</p>\n                                </Button>\n                            </Grid>\n                            <Grid xs={2} />\n                        </>\n                    )\n                })}\n            </Grid>\n        </div >\n    );\n}\n\nexport default Parts;\n","import { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchParts } from '../store/parts';\n\nconst useStyles = makeStyles(() => ({\n    \n    placeholder: {\n\n    },\n\n}))\n\nfunction Part() {\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const type = window.location.pathname.split('/')[1];\n    const id = window.location.pathname.split('/')[2];\n    const part = useSelector(state => state.partsReducer[type]);\n    let createHTML = '';\n\n    useEffect(() => {\n        dispatch(fetchParts())\n    }, [dispatch])\n\n    if (part === undefined) {\n        return null;\n    }\n    else if (type === 'cases') {\n        createHTML = (\n            <>\n                <h2 style={{ textAlign: \"center\" }} className={classes.placeholder}>Size: {part[id].size}</h2>\n            </>\n        )\n    }\n    else if (type === 'mobos') {\n        createHTML = (\n            <>\n                <h2 style={{ textAlign: \"center\" }}>Size: {part[id].size}</h2>\n            </>\n        )\n    }\n    else if (type === 'cpus') {\n        createHTML = (\n            <>\n                <h2 style={{ textAlign: \"center\" }}>Clock Speed: {part[id].clockSpeed}GHz</h2>\n            </>\n        )\n    }\n    else if (type === 'hardDrives') {\n        console.log(part[id])\n        createHTML = (\n            <>\n                <h2 style={{ textAlign: \"center\" }}>SSD: {(`${part[id].SSD}`).toUpperCase()}</h2>\n                <h2 style={{ textAlign: \"center\" }}>Storage: {part[id].gbSize}GBs</h2>\n            </>\n        )\n    }\n    else if (type === 'coolers') {\n        createHTML = (\n            <>\n            </>\n        )\n    }\n    else if (type === 'gpus') {\n        createHTML = (\n            <>\n                <h2 style={{ textAlign: \"center\" }}>VRAM: {part[id].VRAM}GBs</h2>\n            </>\n        )\n    }\n    else if (type === 'powerSupplies') {\n        createHTML = (\n            <>\n                <h2 style={{ textAlign: \"center\" }}>Watts: {part[id].watts}W</h2>\n            </>\n        )\n    }\n    else if (type === 'ram') {\n        createHTML = (\n            <>\n                <h2 style={{ textAlign: \"center\" }}>GBs: {part[id].gbSize}GBs per stick</h2>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <h1 style={{ textAlign: \"center\" }}>{part[id].name}</h1>\n            <h2 style={{ textAlign: \"center\" }}>Brand: {part[id].manufacturer}</h2>\n            {createHTML}\n        </>\n    );\n}\n\nexport default Part;\n","import { Button } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBuild } from '../store/builds';\nimport { fetchParts } from '../store/parts';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst useStyles = makeStyles({\n\n});\n\n\nfunction Build() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const id = window.location.pathname.split('/')[2];\n\n    useEffect(() => {\n        dispatch(fetchBuild(id));\n        dispatch(fetchParts());\n    }, [dispatch, id])\n\n    const build = useSelector(state => state.buildsReducer);\n    const parts = useSelector(state => state.partsReducer);\n\n    if (build.caseId === undefined || parts.cases === undefined) {\n        return null;\n    }\n\n    console.log(build);\n    console.log(parts.cases[build.caseId]);\n\n    function tableBody(type, typeId, name) {\n        return (\n            <TableRow>\n                <TableCell>\n                    <Button>\n                        {parts[type][build[typeId]].name}\n                    </Button>\n                </TableCell>\n                <TableCell>{name}</TableCell>\n                <TableCell>{parts[type][build[typeId]].price}</TableCell>\n            </TableRow>\n        )\n    }\n\n    return (\n        <>\n            <div style={{ textAlign: \"center\" }}>\n                <h1>{build.title}</h1>\n                <TableContainer component={Paper} style={{ width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell>Part Type</TableCell>\n                                <TableCell>Price</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tableBody('cases', 'caseId', 'Case')}\n                            {tableBody('mobos', 'motherBoardId', 'Mother Board')}\n                            {tableBody('cpus', 'cpuId', 'CPU')}\n                            {tableBody('coolers', 'coolerId', 'Cooler')}\n                            {tableBody('hardDrives', 'hardDriveId', 'Hard Drive')}\n                            {tableBody('ram', 'ramId', 'RAM')}\n                            {tableBody('gpus', 'gpuId', 'Graphics Card')}\n                            {tableBody('powerSupplies', 'powerSupplyId', 'Power Supply')}\n                            {tableBody('networkCards', 'networkCardId', 'Network Card')}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </>\n    );\n}\n\nexport default Build;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Menu from '@material-ui/core/Menu';\nimport TextField from '@material-ui/core/TextField';\nimport { fetchParts } from '../store/parts';\nimport { makeBuild } from '../store/builds';\nimport { Box, Button, FormControl, Grid, MenuItem } from '@material-ui/core';\n\n\nfunction CreateBuild() {\n    const dispatch = useDispatch();\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [pictureUrl, setPictureUrl] = useState('');\n    const [Case, setCase] = useState('Case');\n    const [motherBoard, setMotherBoard] = useState('Mother Board');\n    const [cpu, setCpu] = useState('CPU');\n    const [cooler, setCooler] = useState('Cooler');\n    const [hardDrive, setHardDrive] = useState('Hard Drive');\n    const [gpu, setGpu] = useState('GPU');\n    const [ram, setRam] = useState('RAM');\n    const [powerSupply, setPowerSupply] = useState('Power Supply');\n    const [networkCard, setNetworkCard] = useState('Network Card');\n    const user_Id = useSelector(state => state.auth.user.id);\n    const part = useSelector(state => state.partsReducer);\n    const [anchorEl1, setAnchorEl1] = useState('');\n    const [anchorEl2, setAnchorEl2] = useState('');\n    const [anchorEl3, setAnchorEl3] = useState('');\n    const [anchorEl4, setAnchorEl4] = useState('');\n    const [anchorEl5, setAnchorEl5] = useState('');\n    const [anchorEl6, setAnchorEl6] = useState('');\n    const [anchorEl7, setAnchorEl7] = useState('');\n    const [anchorEl8, setAnchorEl8] = useState('');\n    const [anchorEl9, setAnchorEl9] = useState('');\n    // const [total, setTotal] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    // const [sum, setSum] = useState(0);\n\n    function sumArr(array) {\n        let result = 0;\n        for (let i = 0; i<array.length; i++){\n            result+=array[i];\n        }\n        return result;\n    }\n\n    useEffect(() => {\n        dispatch(fetchParts())\n    }, [dispatch])\n\n\n    const handleClose = () => {\n        setAnchorEl1(null);\n        setAnchorEl2(null);\n        setAnchorEl3(null);\n        setAnchorEl4(null);\n        setAnchorEl5(null);\n        setAnchorEl6(null);\n        setAnchorEl7(null);\n        setAnchorEl8(null);\n        setAnchorEl9(null);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await dispatch(makeBuild(title, description, user_Id, Case, motherBoard, cpu,\n            cooler, hardDrive, ram, gpu, powerSupply, networkCard, pictureUrl));\n        window.location.href = \"/\";\n    }\n\n    if (part.cases === undefined) {\n        return null;\n    }\n\n    return (\n        <>\n            <h1 style={{ textAlign: \"center\" }}>Create Build</h1>\n            <Grid container style={{ justifyContent: \"center\", marginTop: \"5%\" }}>\n                <Box border={1} style={{ padding: \"2%\" }}>\n                    <form method=\"POST\" action=\"/api/builds\" onSubmit={handleSubmit}>\n                        <FormControl>\n                            <TextField placeholder={\"Title\"} value={title} onChange={(e) => setTitle(e.target.value)} />\n                            <TextField placeholder={\"Description\"} value={description} onChange={(e) => setDescription(e.target.value)} />\n                            <TextField placeholder={\"Picture Url\"} value={pictureUrl} onChange={(e) => setPictureUrl(e.target.value)} />\n                            <Button aria-controls=\"cases\" aria-haspopup=\"true\" onClick={(e) => setAnchorEl1(e.currentTarget)}>\n                                {(Case === 'Case') ? Case : 'name: ' + part.cases[Case].name + ', price: ' + part.cases[Case].price }\n                            </Button>\n                            <Menu\n                                id=\"cases\"\n                                anchorEl={anchorEl1}\n                                keepMounted\n                                open={Boolean(anchorEl1)}\n                                onClose={handleClose}\n                            >\n                                {Object.values(part.cases).map(object => {\n                                    if (motherBoard === \"Mother Board\") {\n                                        return (\n                                            <MenuItem key={object.id} value={object.id} onClick={e => {\n                                                setCase(e.target.value);\n                                                // setTotal(total.splice(0, 1, object.price));\n                                                // setSum(sumArr(total));\n                                                handleClose();\n                                            }}>\n                                                {object.name}\n                                            </MenuItem>\n                                        )\n                                    }\n                                    else if (object.size === part.mobos[motherBoard].size) {\n                                        return (\n                                            <MenuItem key={object.id} value={object.id} onClick={e => {\n                                                setCase(e.target.value);\n                                                handleClose();\n                                            }}>\n                                                {object.name}\n                                            </MenuItem>\n                                        )\n                                    }\n                                })}\n                            </Menu>\n                            <Button aria-controls=\"mobos\" aria-haspopup=\"true\" onClick={(e) => setAnchorEl2(e.currentTarget)}>\n                                {(motherBoard === 'Mother Board') ? motherBoard : 'name: ' + part.mobos[motherBoard].name + ', price: ' + part.mobos[motherBoard].price }\n                            </Button>\n                            <Menu\n                                id=\"mobos\"\n                                anchorEl={anchorEl2}\n                                keepMounted\n                                open={Boolean(anchorEl2)}\n                                onClose={handleClose}\n                            >\n                                {Object.values(part.mobos).map(object => {\n                                    if (Case === 'Case') {\n                                        return (\n                                            <MenuItem key={object.id} value={object.id} onClick={(e) => {\n                                                setMotherBoard(e.target.value);\n                                                handleClose();\n                                            }}>\n                                                {object.name}\n                                            </MenuItem>\n                                        )\n                                    }\n                                    else if (object.size === part.cases[Case].size) {\n                                        return (\n                                            <MenuItem key={object.id} value={object.id} onClick={(e) => {\n                                                setMotherBoard(e.target.value);\n                                                handleClose();\n                                            }}>\n                                                {object.name}\n                                            </MenuItem>\n                                        )\n                                    }\n                                })}\n                            </Menu>\n                            <Button aria-controls=\"cpus\" aria-haspopup=\"true\" onClick={(e) => setAnchorEl3(e.currentTarget)}>\n                                {(cpu === 'CPU') ? cpu : 'name: ' + part.cpus[cpu].name + ', price: ' + part.cpus[cpu].price }\n                            </Button>\n                            <Menu\n                                id=\"cpus\"\n                                anchorEl={anchorEl3}\n                                keepMounted\n                                open={Boolean(anchorEl3)}\n                                onClose={handleClose}\n                            >\n                                {Object.values(part.cpus).map(object => {\n                                    return (\n                                        <MenuItem key={object.id} value={object.id} onClick={(e) => {\n                                            setCpu(e.target.value);\n                                            handleClose();\n                                        }}>\n                                            {object.name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Menu>\n                            <Button aria-controls=\"gpus\" aria-haspopup=\"true\" onClick={(e) => setAnchorEl4(e.currentTarget)}>\n                                {(gpu === 'GPU') ? gpu : 'name: ' + part.gpus[gpu].name + ', price: ' + part.gpus[gpu].price }\n                            </Button>\n                            <Menu\n                                id=\"gpus\"\n                                anchorEl={anchorEl4}\n                                keepMounted\n                                open={Boolean(anchorEl4)}\n                                onClose={handleClose}\n                            >\n                                {Object.values(part.gpus).map(object => {\n                                    return (\n                                        <MenuItem key={object.id} value={object.id} onClick={(e) => {\n                                            setGpu(e.target.value);\n                                            handleClose();\n                                        }}>\n                                            {object.name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Menu>\n                            <Button aria-controls=\"coolers\" aria-haspopup=\"true\" onClick={(e) => setAnchorEl5(e.currentTarget)}>\n                                {(cooler === 'Cooler') ? cooler : 'name: ' + part.coolers[cooler].name + ', price: ' + part.coolers[cooler].price }\n                            </Button>\n                            <Menu\n                                id=\"coolers\"\n                                anchorEl={anchorEl5}\n                                keepMounted\n                                open={Boolean(anchorEl5)}\n                                onClose={handleClose}\n                            >\n                                {Object.values(part.coolers).map(object => {\n                                    return (\n                                        <MenuItem key={object.id} value={object.id} onClick={(e) => {\n                                            setCooler(e.target.value);\n                                            handleClose();\n                                        }}>\n                                            {object.name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Menu>\n                            <Button aria-controls=\"rams\" aria-haspopup=\"true\" onClick={(e) => setAnchorEl6(e.currentTarget)}>\n                                {(ram === 'RAM') ? ram : 'name: ' + part.ram[ram].name + ', price: ' + part.ram[ram].price }\n                            </Button>\n                            <Menu\n                                id=\"rams\"\n                                anchorEl={anchorEl6}\n                                keepMounted\n                                open={Boolean(anchorEl6)}\n                                onClose={handleClose}\n                            >\n                                {Object.values(part.ram).map(object => {\n                                    return (\n                                        <MenuItem key={object.id} value={object.id} onClick={(e) => {\n                                            setRam(e.target.value);\n                                            handleClose();\n                                        }}>\n                                            {object.name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Menu>\n                            <Button aria-controls=\"powers\" aria-haspopup=\"true\" onClick={(e) => setAnchorEl7(e.currentTarget)}>\n                                {(powerSupply === 'Power Supply') ? powerSupply : 'name: ' + part.powerSupplies[powerSupply].name + ', price: ' + part.powerSupplies[powerSupply].price }\n                            </Button>\n                            <Menu\n                                id=\"powers\"\n                                anchorEl={anchorEl7}\n                                keepMounted\n                                open={Boolean(anchorEl7)}\n                                onClose={handleClose}\n                            >\n                                {Object.values(part.powerSupplies).map(object => {\n                                    return (\n                                        <MenuItem key={object.id} value={object.id} onClick={(e) => {\n                                            setPowerSupply(e.target.value);\n                                            handleClose();\n                                        }}>\n                                            {object.name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Menu>\n                            <Button aria-controls=\"hardDrives\" aria-haspopup=\"true\" onClick={(e) => setAnchorEl8(e.currentTarget)}>\n                                {(hardDrive === 'Hard Drive') ? hardDrive : 'name: ' + part.hardDrives[hardDrive].name + ', price: ' + part.hardDrives[hardDrive].price }\n                            </Button>\n                            <Menu\n                                id=\"hardDrives\"\n                                anchorEl={anchorEl8}\n                                keepMounted\n                                open={Boolean(anchorEl8)}\n                                onClose={handleClose}\n                            >\n                                {Object.values(part.hardDrives).map(object => {\n                                    return (\n                                        <MenuItem key={object.id} value={object.id} onClick={(e) => {\n                                            setHardDrive(e.target.value);\n                                            handleClose();\n                                        }}>\n                                            {object.name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Menu>\n                            <Button aria-controls=\"networkCards\" aria-haspopup=\"true\" onClick={(e) => setAnchorEl9(e.currentTarget)}>\n                                {(networkCard === 'Network Card') ? networkCard : 'name: ' + part.networkCards[networkCard].name + ', price: ' + part.networkCards[networkCard].price }\n                            </Button>\n                            <Menu\n                                id=\"networkCards\"\n                                anchorEl={anchorEl9}\n                                keepMounted\n                                open={Boolean(anchorEl9)}\n                                onClose={handleClose}\n                            >\n                                {Object.values(part.networkCards).map(object => {\n                                    return (\n                                        <MenuItem key={object.id} value={object.id} onClick={(e) => {\n                                            setNetworkCard(e.target.value);\n                                            handleClose();\n                                        }}>\n                                            {object.name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Menu>\n                            <Button type=\"submit\" style={{ backgroundColor: \"#4d9699\", color: \"#fade98\" }}>Create</Button>\n                        </FormControl>\n                    </form>\n                </Box>\n            </Grid>\n        </>\n    );\n}\n\nexport default CreateBuild;\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\n\n\nfunction Footer() {\n    return (\n        <>\n            <footer style={{ marginTop: \"10px\", backgroundColor: \"#4d9699\" }}>\n                <Grid container>\n                    <Grid item xs={4}></Grid>\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>\n                        <h3 style={{ margin: \"5px\" }}>Creator Links:</h3>\n                        <a href=\"https://www.linkedin.com/in/besonend/\" style={{ textDecoration: \"none\", textAlign: \"center\", margin: \"0\", color: \"black\" }}>LinkedIn</a>\n                        <div>\n                            <a href=\"https://github.com/besonend\" style={{ textDecoration: \"none\", textAlign: \"center\", margin: \"0\", color: \"black\" }}>GitHub</a>\n                        </div>\n                        <div style={{ marginBottom: \"15px\" }}>\n                            <a href=\"https://besonend.com/\" style={{ textDecoration: \"none\", textAlign: \"center\", margin: \"0\", color: \"black\" }}>Portfolio</a>\n                        </div>\n                    </Grid>\n                    <Grid item xs={4} style={{ textAlign: \"center\" }}>\n                        <h3 style={{ margin: \"5px\" }}>Repo:</h3>\n                        <a href=\"https://github.com/besonend/PcPickle\" style={{ textDecoration: \"none\", textAlign: \"center\", margin: \"0\", color: \"black\" }}>GitHub</a>\n                    </Grid>\n                </Grid>\n            </footer>\n        </>\n    );\n}\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { setUser } from './store/auth'\nimport SignupPage from './pages/SignupPage';\nimport LoginPage from './pages/LoginPage';\nimport { CssBaseline } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { AuthRoute } from './components/utils/Routes';\nimport Home from './pages/Home';\nimport CreatePart from './pages/CreatePart';\nimport NavBar from './components/NavBar';\nimport PartsBar from './components/PartsBar';\nimport Parts from './pages/Parts';\nimport Part from './pages/Part';\nimport Build from './pages/Build';\nimport Builds from './components/Builds';\nimport CreateBuild from './pages/CreateBuild';\nimport Footer from './components/Footer';\n\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const dispatch = useDispatch()\n  const stats = useSelector(state => state.auth.user);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const res = await fetch(\"/api/session/current_user\");\n      if (res.ok) {\n        res.data = await res.json(); // current user info\n        dispatch(setUser(res.data.user))\n      }\n      setLoading(false);\n    }\n    loadUser();\n  }, [dispatch, stats.id]);\n\n  const currentUser = useSelector(state => state.auth.user);\n\n  if (loading) {\n    return <p>loading...</p>\n  }\n  return (\n    <>\n      <CssBaseline />\n      <BrowserRouter>\n        <NavBar />\n        <PartsBar />\n        <Switch>\n          <Route exact path='/' component={Home} currentUserId={currentUser.id} />\n          <AuthRoute exact path='/signup' component={SignupPage} currentUserId={currentUser.id} />\n          <AuthRoute exact path='/login' component={LoginPage} currentUserId={currentUser.id} />\n          <Route exact path='/create/:part' component={CreatePart} currentUserId={currentUser.id} />\n          <Route exact path='/createbuild' component={CreateBuild} currentUserId={currentUser.id} />\n          <Route exact path='/builds' component={Builds} currentUserId={currentUser.id} />\n          <Route exact path='/builds/:id' component={Build} currentUserId={currentUser.id} />\n          <Route exact path='/:part' component={Parts} currentUserId={currentUser.id} />\n          <Route exact path='/:part/:id' component={Part} currentUserId={currentUser.id} />\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport auth from './auth';\nimport partsReducer from './parts';\nimport buildsReducer from './builds';\n\n\nconst rootReducer = combineReducers({\n  auth,\n  partsReducer,\n  buildsReducer,\n});\n\nlet storeEnhancer;\n\nif (process.env.NODE_ENV !== 'production') {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  storeEnhancer = composeEnhancers(applyMiddleware(thunk));\n} else {\n  storeEnhancer = applyMiddleware(thunk);\n}\n\nexport default function configureStore(initialState) {\n  return createStore(\n    rootReducer,\n    initialState,\n    storeEnhancer\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store/configureStore'\nimport { Provider } from 'react-redux'\n\n\n\nconst store = configureStore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}